1) Which are legal?

A) var x = 99.9;
B) public var x = "Hello";
C) var []x = new int[]{1, 2, 3};
D) public void doIt(var x) {}
E) var x = new int[]{1,2,3,};

2) What is the type of:

99
?
A) byte
B) int
C) long
D) double
E) all of the above

3) Which is true?

FALSE A) static methods cannot access instance fields
TRUE  B) 'this' exists only in instance methods
TRUE  C) access to instance fields is controlled only by private/public etc and scope
TRUE  D) This would be legal, if x is an instance field of class MyStuff
   public static doStuff(MyStuff ms) { int x = ms.x; }

4) Given:
class X {
    static int MAX_VAL = 100;
    int value = 99;
    public void setVal(int x) {
      if (x <= MAX_VAL) value = x;
    }
  }
and:
    X a = new X();
    X b = new X();
    a.setVal(120);
    System.out.print(a.value + ", ");
    b.MAX_VAL = 150;
    a.setVal(140);
    System.out.println(a.value);

What is the result?
    A) 99, 99
    B) 120, 140
    C) 99, 140
    D) Compilation failure
    E) Exception at runtime

Q5) Given:
  class Y {
    static String sayHi() { return "Y-Hello"; }
    String sayHi2() { return "Y-Hello2"; }
  }
and:
  class Z extends Y { // Liskov substution principle
    static String sayHi() { return "Z-Hello"; }
    String sayHi2() { return "Z-Hello2"; }
  }
and:
    Y y = new Z();
    System.out.println(y.sayHi() + ", " + y.sayHi2());

What is the result?
    A) Y-Hello, Y-Hello2
    B) Y-Hello, Z-Hello2
    C) Z-Hello, Z-Hello2
    D) Z-Hello, Y-Hello2
    E) Compilation fails

